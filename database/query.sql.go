// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package database

import (
	"context"
)

const createTodo = `-- name: CreateTodo :one
INSERT INTO todos (id, title) VALUES (?, ?) RETURNING id, title, createdat
`

type CreateTodoParams struct {
	ID    string
	Title string
}

func (q *Queries) CreateTodo(ctx context.Context, arg CreateTodoParams) (Todo, error) {
	row := q.db.QueryRowContext(ctx, createTodo, arg.ID, arg.Title)
	var i Todo
	err := row.Scan(&i.ID, &i.Title, &i.Createdat)
	return i, err
}

const getTodo = `-- name: GetTodo :one
SELECT id, title, createdat FROM todos WHERE id = ? LIMIT 1
`

func (q *Queries) GetTodo(ctx context.Context, id string) (Todo, error) {
	row := q.db.QueryRowContext(ctx, getTodo, id)
	var i Todo
	err := row.Scan(&i.ID, &i.Title, &i.Createdat)
	return i, err
}
